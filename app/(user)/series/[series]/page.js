import BookItemLarge from "@/components/sections/bookItemLarge";
import Pagination from "@/components/sections/pagination";
import classes from "./page.module.css";
import Link from "next/link";
import Image from "next/image";
import arrowRight from "@/icons/right-arrow.svg";
import { formatParams, capitalize } from "@/lib/formatters";
import { notFound } from "next/navigation";

export async function generateMetadata({ params }) {
  const categoryParams = await params;
  const parameterFormatted = formatParams(categoryParams.series, true);
  const title = capitalize(parameterFormatted);
  return {
    title: `${title} | BOOOKS`,
    description: "Generated by create next app",
  };
}

async function getBooksBySeries(series) {
  try {
    const res = await fetch(
      process.env.NEXT_PUBLIC_SERVER_URL + `api/books/series/${series}`
    );
    return res.json();
  } catch (error) {
    return console.log("Failed to get books", error);
  }
}

export default async function SeriesDetails({ params, searchParams }) {
  const seriesParams = await params;
  const searchParameter = await searchParams;

  const seriesTitle = formatParams(seriesParams.series);

  const { series } = await getBooksBySeries(seriesTitle);

  if (!series.length) {
    notFound();
  }

  const title = capitalize(seriesTitle);

  //pagination
  const page = searchParameter["page"] ?? "1";
  const perPage = 5;
  const start = (page - 1) * perPage;
  const end = start + perPage;
  const entries = series.slice(start, end);

  return (
    <section className={classes.section}>
      <div className={classes.wrapper}>
        <p className={classes.header}>{title}</p>
        <div className={classes["book-container"]}>
          {entries.map((book) => (
            <BookItemLarge key={book._id} {...book} />
          ))}
        </div>
        <div className={classes.bottom}>
          <Link href="/series" className={classes.explore}>
            <div className={classes["explore-wrapper"]}>
              <p>Explore all series</p>
              <Image
                className={classes.icon}
                src={arrowRight}
                alt="arrow-icon"
                height={20}
                width={20}
              />
            </div>
          </Link>
          <Pagination length={series.length} perPage={perPage} />
        </div>
      </div>
    </section>
  );
}
